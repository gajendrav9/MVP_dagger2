LoginSqlite
Folder
Activity>>>RegisterActivity
Adapter>>>RListAdapter,UserList
DBHelper>>>LoginDB
Model>>>>Model
MainActivity
package gv.githublogin;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.AppCompatButton;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import gv.githublogin.Activity.RegisterActivity;
import gv.githublogin.Adapter.UserList;
import gv.githublogin.DBHelper.LoginDB;
import gv.githublogin.Model.Model;

public class MainActivity extends AppCompatActivity {


    //Defining views
    private EditText editEmail;
    private EditText editPassword;
    private AppCompatButton btnLogin;
    private TextView textView;

    LoginDB loginDB;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        loginDB = LoginDB.getInstance(getApplicationContext());

        //intilizing views
        editEmail=(EditText)findViewById(R.id.editEmail);
        editPassword=(EditText)findViewById(R.id.editPassword);

        btnLogin=(AppCompatButton)findViewById(R.id.btnLogin);
        btnLogin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                inLogin();
            }
        });

        textView=(TextView)findViewById(R.id.link_sign_up);
        textView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent i= new Intent(MainActivity.this,RegisterActivity.class);
                startActivity(i);
            }
        });
    }

    private void inLogin() {
       // Log.d(TAG, "Login");

        String email=editEmail.getText().toString();
        String password=editPassword.getText().toString();
        int id=checkUser(new Model(email,password));
        if (email.isEmpty() || !android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()){
            Toast.makeText(getApplicationContext(),"Enter a valid email Address",Toast.LENGTH_LONG).show();
           return;
        }
        if(email.equals("")||password.equals("")||email.length()<5){
            Toast.makeText(getApplicationContext(),"Enter email and password",Toast.LENGTH_LONG).show();
            return;
        }
        if(password.length()<4){
            Toast.makeText(getApplicationContext(),"Enter a valid password",Toast.LENGTH_LONG).show();
            return;
        }


            /**
            Model model=new Model();
            String a=model.getEmail();
            String b=model.getPassword();
            loginDB.readSingleRecord();


            if(a.equals(email)||b.equals(password)) {

                //if(){
                Toast.makeText(getApplicationContext(), "Login Successful", Toast.LENGTH_LONG).show();
                Intent i=new Intent(MainActivity.this,UserList.class);
                startActivity(i);
            }
             */

            if (id==-1){
                Toast.makeText(MainActivity.this,"User Not Exist",Toast.LENGTH_LONG).show();

            }else {
                Toast.makeText(MainActivity.this,"User  Exist",Toast.LENGTH_LONG).show();
                Intent i=new Intent(MainActivity.this,UserList.class);
                startActivity(i);

            }
            }



    public  int checkUser(Model model){
        return loginDB.checkUser(model);
    }


    }


package gv.githublogin.Activity;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.AppCompatButton;
import android.view.View;
import android.widget.EditText;

import gv.githublogin.Adapter.UserList;
import gv.githublogin.DBHelper.LoginDB;
import gv.githublogin.Model.Model;
import gv.githublogin.R;

/**
 * Created by hi on 9/15/2016.
 */
public class RegisterActivity extends AppCompatActivity {
    
    private EditText editName;
    private EditText editEmail;
    private EditText editPassword;
    private AppCompatButton btnRegister;
    private LoginDB loginDB;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.register);

        loginDB=LoginDB.getInstance(getApplicationContext());

        //intilizing views
        editName=(EditText)findViewById(R.id.editName);

        editEmail=(EditText)findViewById(R.id.editEmail);
        editPassword=(EditText)findViewById(R.id.editPassword);

        btnRegister=(AppCompatButton)findViewById(R.id.btnRegister);
        btnRegister.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                inrgister();
            }
        });

     
    }

    private void inrgister() {
        Model model=new Model();
        model.user=editName.getText().toString();
        model.email=editEmail.getText().toString();
        model.password=editPassword.getText().toString();

        loginDB.insertUser(model);
        Intent i=new Intent(RegisterActivity.this,UserList.class);
        startActivity(i);
    }


}


package gv.githublogin.Adapter;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;

import gv.githublogin.Model.Model;
import gv.githublogin.R;

/**
 * Created by hi on 9/15/2016.
 */
public class RListAdapter extends RecyclerView.Adapter<RListAdapter.ListViewHolder>{
    Context context;
    List<Model> datalist=new ArrayList<>();



    public RListAdapter(Context context, List<Model> datalist) {
        this.context=context;
        this.datalist=datalist;
    }

    @Override
    public RListAdapter.ListViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View layoutView=LayoutInflater.from(parent.getContext()).inflate(R.layout.list,null);
        ListViewHolder rcv=new ListViewHolder(layoutView);
        return rcv;
    }

    @Override
    public void onBindViewHolder(RListAdapter.ListViewHolder holder, int position) {

        holder.tv_name.setText(datalist.get(position).getUser());
        holder.tv_email.setText(datalist.get(position).getEmail());
    }

    @Override
    public int getItemCount() {
        return this.datalist.size();
    }

    class ListViewHolder extends RecyclerView.ViewHolder{
        TextView tv_name,tv_email;

        public ListViewHolder(View itemView) {
            super(itemView);
            tv_name=(TextView)itemView.findViewById(R.id.tv_name);
            tv_email=(TextView)itemView.findViewById(R.id.tv_email);
        }
    }
}


package gv.githublogin.Adapter;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;

import gv.githublogin.DBHelper.LoginDB;
import gv.githublogin.R;

/**
 * Created by hi on 9/15/2016.
 */
public class UserList extends AppCompatActivity{

    RecyclerView recyclerView;
    LoginDB loginDB;
    RListAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.user);


        loginDB = LoginDB.getInstance(getApplicationContext());

        recyclerView = (RecyclerView) findViewById(R.id.rcv);
        adapter = new RListAdapter(this, loginDB.getAllpost());
        recyclerView.setAdapter(adapter);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

    }

}


package gv.githublogin.DBHelper;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import java.util.ArrayList;
import java.util.List;

import gv.githublogin.Model.Model;

/**
 * Created by hi on 9/14/2016.
 */
public class LoginDB extends SQLiteOpenHelper {

    private static final String TAG = "LoginDB";
    private static String DB_NAME = "logindb";
    private static String TABLE_USER = "User";
    private static final int DB_VERSION = 1;

    //columns
    private static final String ID = "id";
    private static final String USER = "USER";
    private static final String PASSWORD = "PASSWORD";
    private static final String EMAIL = "email";

    private static LoginDB sInstance;


    public static synchronized LoginDB getInstance(Context context) {
        // Use the application context, which will ensure that you
        // don't accidentally leak an Activity's context.
        if (sInstance == null) {
            sInstance = new LoginDB(context.getApplicationContext());
        }
        return sInstance;
    }

    /**
     * Constructor should be private to prevent direct instantiation.
     * Make a call to the static method "getInstance()" instead.
     */


    public LoginDB(Context context) {
        super(context, DB_NAME, null, DB_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {

        String CREATE_USERDETAIL_TABLE = "CREATE TABLE " + TABLE_USER +
                "(" +
                ID + " INTEGER PRIMARY KEY AUTOINCREMENT," +
                USER + " TEXT," +
                PASSWORD + " TEXT," +
                EMAIL + " TEXT" +
                ")";
        db.execSQL(CREATE_USERDETAIL_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

        if (oldVersion != newVersion) {
            // Simplest implementation is to drop all old tables and recreate them
            db.execSQL("DROP TABLE IF EXISTS " + TABLE_USER);

            onCreate(db);
        }


    }

    /**
     * Insert User detail
     */
    public void insertUser(Model model) {
        /**
         * create and /or open the database for writing
         */

        SQLiteDatabase db = getWritableDatabase();

        /**
         * To wrap our insert in a transaction.this helps with performance and ensures
         * consistency of the databases
         */

        db.beginTransaction();

        try {
            ContentValues values = new ContentValues();
            //values.put(ID,model.id);
            values.put(EMAIL, model.email);
            values.put(USER, model.user);
            values.put(PASSWORD, model.password);
            db.insertOrThrow(TABLE_USER, null, values);
            db.setTransactionSuccessful();
        } catch (SQLException e) {
            e.printStackTrace();
            Log.d(TAG, "Error while trying to add post to database");
        } finally {
            db.endTransaction();
        }

    }

    /**
     * fetch all data from usertable
     */
    public List<Model> getAllpost() {
        List<Model> models = new ArrayList<>();

        /**
         * Select from posts left outer join users
         */

        String USER_DETAIL_SELECT_QUERY = "SELECT * FROM " + TABLE_USER;

        SQLiteDatabase db = getReadableDatabase();
        Cursor cursor = db.rawQuery(USER_DETAIL_SELECT_QUERY, null);

        try {
            if (cursor.moveToFirst()) {
                do {
                    Model model = new Model();
                    //model.id=cursor.getString(cursor.getColumnIndex(ID));
                    model.user = cursor.getString(cursor.getColumnIndex(USER));
                    model.email = cursor.getString(cursor.getColumnIndex(EMAIL));
                    model.password = cursor.getString(cursor.getColumnIndex(PASSWORD));

                    models.add(model);
                } while (cursor.moveToNext());
            }
        } catch (Exception e) {
            Log.d(TAG, "Error while trying to get posts from database");
        } finally {
            if (cursor != null && !cursor.isClosed()) {
                cursor.close();
            }
        }
        return models;
    }

    public int checkUser(Model model) {
        /**
        List<Model> models = new ArrayList<>();

        String sql = "SELECT * FROM " + TABLE_USER ;
        SQLiteDatabase db = this.getReadableDatabase();
        Cursor c = db.rawQuery(sql, null);
        if (c.moveToFirst())
            do {
                Model model = new Model();

                //int  id=Integer.parseInt(c.getString(c.getColumnIndex(ID)));
                // String user=c.getString(c.getColumnIndex(USER));
                model.email= c.getString(c.getColumnIndex(EMAIL));
                model.password = c.getString(c.getColumnIndex(PASSWORD));
                models.add(model);
         */
        int id=-1;

        SQLiteDatabase db=this.getReadableDatabase();

        Cursor c=db.rawQuery("SELECT id FROM user WHERE email=? AND PASSWORD=?",new String[]{model.getEmail(),model.getPassword()});
            if(c.getCount()>0){
                c.moveToFirst();
                id=c.getInt(0);
                c.close();
        }
        return id;
    }
}

package gv.githublogin.Model;

/**
 * Created by hi on 9/15/2016.
 */
public class Model {
    public String user,email,password;

    public Model(){

    }

    public Model(String user, String email, String password) {
        this.user = user;
        this.email = email;
        this.password = password;
    }
    public Model(String email,String password){
        this.email=email;
        this.password=password;
    }

    public String getUser() {
        return user;
    }

    public void setUser(String user) {
        this.user = user;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }


}


<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="gv.githublogin.MainActivity"
    android:background="#f1c7dd"
    android:fitsSystemWindows="true">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:layout_gravity="center_vertical"
        android:weightSum="1">
        <EditText
            android:id="@+id/editEmail"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:inputType="textEmailAddress"
            android:hint="Email"
            android:textColor="@color/text"
            android:maxLength="20"/>
        <EditText
            android:id="@+id/editPassword"
            android:layout_marginTop="10dp"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:inputType="textPassword"
            android:textColor="@color/text"
            android:hint="Password"
            android:maxLength="20"/>
        <android.support.v7.widget.AppCompatButton
            android:id="@+id/btnLogin"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1.70"
            android:text="LOGIN"
            android:layout_marginTop="15dp"
            android:background="#f36464" />
        <TextView
            android:id="@+id/link_sign_up"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textSize="16sp"
            android:text="No account yet ? Create One"
            android:gravity="center"/>

    </LinearLayout>





</ScrollView>


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <TextView
        android:id="@+id/tv_name"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" />
    <TextView
        android:id="@+id/tv_email"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" />
</LinearLayout>


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#f1c7dd"
    android:gravity="center">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:layout_gravity="center_vertical"
        android:weightSum="1"
        android:layout_marginLeft="10dp"
        android:layout_marginRight="10dp">
        <EditText
            android:id="@+id/editName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:inputType="textEmailAddress"
            android:hint="User Name"
            android:gravity="center"
            android:textColor="@color/text"
            android:maxLength="20"/>
        <EditText
            android:id="@+id/editEmail"
            android:layout_marginTop="10dp"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:inputType="textEmailAddress"
            android:textColor="@color/text"
            android:hint="Email"
            android:gravity="center"

            android:maxLength="20"/>
        <EditText
            android:id="@+id/editPassword"
            android:layout_marginTop="10dp"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:inputType="textPassword"
            android:textColor="@color/text"
            android:hint="Password"
            android:gravity="center"

            android:maxLength="20"/>

        <android.support.v7.widget.AppCompatButton
            android:id="@+id/btnRegister"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_weight="1.70"
            android:text="REGISTER"
            android:layout_marginTop="15dp"
            android:background="#f36464" />


    </LinearLayout>

</LinearLayout>


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" android:layout_width="match_parent"
    android:layout_height="match_parent">
    <android.support.v7.widget.RecyclerView
        android:id="@+id/rcv"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>

</LinearLayout>



